<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Distributed on x1ah</title><link>https://when.run/cn/tags/distributed/</link><description>Recent content in Distributed on x1ah</description><generator>Hugo -- gohugo.io</generator><language>cn</language><lastBuildDate>Fri, 08 Nov 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://when.run/cn/tags/distributed/index.xml" rel="self" type="application/rss+xml"/><item><title>向量时钟(Vector Clock)</title><link>https://when.run/cn/posts/vector-clock/</link><pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate><guid>https://when.run/cn/posts/vector-clock/</guid><description>向量时钟(Vector Clock) 向量时钟是在分布式系统中检测事件因果关系的一种算法。如图：
系统中有 ABC 三个进程，每个进程都维护自己的一个向量时钟，时钟的规则如下：
初始时，所有进程的时钟都为 0 进程每次处理一个内部事件，其逻辑时钟加 1 每次发送消息，其逻辑时钟加 1，并且将其向量时钟一起发送 每次收到消息，其逻辑时钟加 1，并更新本地时钟，逻辑时钟的值为本地时钟里值的最大值 每个进程维护的所有逻辑时钟为一个向量时钟。假设进程 A 向量时钟如下：
+----+ |A:0 | |B:3 | ===&amp;gt; 这个整体称为 A 的 &amp;#34;向量时钟&amp;#34;，其中，A:0 为 A 的逻辑时钟 |C:5 | +----+ 因果关系判断规则 如果时钟 V1 的每个逻辑时钟值都比时钟 V2 大，那么称 V1 比 V2 先发生。如： V1: [A:2,B:4,C:2] 与 V2: [A:1,B:2,C:1] 如果不满足条件 1), 即有的值 V1 比 V2 大，有的 V2 比 V1 大，那么看做两个事件同时发生 应用 向量时钟通常用于检测 replication 之间的数据冲突。例如 Dynamo: Data Versioning With DynamoDB。</description><content>&lt;h2 id="向量时钟vector-clock">向量时钟(Vector Clock)&lt;/h2>
&lt;p>向量时钟是在分布式系统中检测事件因果关系的一种算法。如图：&lt;img alt="Imgur" src="https://i.imgur.com/0XRtT9o.png">&lt;/p>
&lt;p>系统中有 ABC 三个进程，每个进程都维护自己的一个向量时钟，时钟的规则如下：&lt;/p>
&lt;ol>
&lt;li>初始时，所有进程的时钟都为 0&lt;/li>
&lt;li>进程每次处理一个内部事件，其逻辑时钟加 1&lt;/li>
&lt;li>每次发送消息，其逻辑时钟加 1，并且将其向量时钟一起发送&lt;/li>
&lt;li>每次收到消息，其逻辑时钟加 1，并更新本地时钟，逻辑时钟的值为本地时钟里值的最大值&lt;/li>
&lt;/ol>
&lt;p>每个进程维护的所有逻辑时钟为一个向量时钟。假设进程 A 向量时钟如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+----+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span>A:&lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span>B:&lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">===&amp;gt;&lt;/span> 这个整体称为 A 的 &lt;span style="color:#e6db74">&amp;#34;向量时钟&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">，&lt;/span>其中&lt;span style="color:#960050;background-color:#1e0010">，&lt;/span>A:&lt;span style="color:#ae81ff">0&lt;/span> 为 A 的逻辑时钟
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span>C:&lt;span style="color:#ae81ff">5&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+----+&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="因果关系判断规则">因果关系判断规则&lt;/h3>
&lt;ol>
&lt;li>如果时钟 V1 的每个逻辑时钟值都比时钟 V2 大，那么称 V1 比 V2 先发生。如： &lt;code>V1: [A:2,B:4,C:2]&lt;/code> 与 &lt;code>V2: [A:1,B:2,C:1]&lt;/code>&lt;/li>
&lt;li>如果不满足条件 1), 即有的值 V1 比 V2 大，有的 V2 比 V1 大，那么看做两个事件同时发生&lt;/li>
&lt;/ol>
&lt;h2 id="应用">应用&lt;/h2>
&lt;p>向量时钟通常用于检测 replication 之间的数据冲突。例如 Dynamo: &lt;a href="https://cloudacademy.com/blog/data-versioning-with-dynamodb-an-inside-look-into-nosql-part-5/">Data Versioning With DynamoDB&lt;/a>。&lt;/p></content></item></channel></rss>